{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jesse Alvarez\\\\Desktop\\\\technews\\\\tech-news-java-api\\\\client\\\\src\\\\components\\\\ThoughtForm\\\\index.js\";\nimport React, { useState, useRef } from 'react';\n\nconst ThoughtForm = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    thought: \"\"\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n  const fileInput = useRef(null);\n\n  const handleImageUpload = event => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append('image', fileInput.current.files[0]);\n\n    const postImage = async () => {\n      try {\n        const res = await fetch('/api/image-upload', {\n          mode: 'cors',\n          method: 'POST',\n          body: data\n        });\n        if (!res.ok) throw new Error(res.statusText);\n        const postResponse = await res.json();\n        setFormState({ ...formState,\n          image: postResponse.Location\n        });\n        console.log('postImage: ', postResponse.Location);\n        return postResponse.Location;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    postImage();\n  }; // update state based on form input changes\n\n\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setFormState({ ...formState,\n        [event.target.name]: event.target.value\n      });\n      setCharacterCount(event.target.value.length);\n    }\n  }; // submit form\n\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    const postData = async () => {\n      const res = await fetch('/api/users', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formState)\n      });\n      const data = await res.json();\n      console.log(data);\n    };\n\n    postData(); // clear form value\n\n    setFormState({\n      username: \"\",\n      thought: \"\"\n    });\n    setCharacterCount(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: `m-0 ${characterCount === 280 ? \"text-error\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Character Count: \", characterCount, \"/280\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"flex-row justify-center justify-space-between-md align-stretch\",\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Name\",\n    name: \"username\",\n    value: formState.username,\n    className: \"form-input col-12 \",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Here's a new thought...\",\n    name: \"thought\",\n    value: formState.thought,\n    className: \"form-input col-12 \",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-input col-12  p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Add an image to your thought:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: \"{fileInput}\",\n    className: \"form-input p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: handleImageUpload,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Upload\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn col-12 \",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nexport default ThoughtForm;","map":{"version":3,"names":["React","useState","useRef","ThoughtForm","formState","setFormState","username","thought","characterCount","setCharacterCount","fileInput","handleImageUpload","event","preventDefault","data","FormData","append","current","files","postImage","res","fetch","mode","method","body","ok","Error","statusText","postResponse","json","image","Location","console","log","error","handleChange","target","value","length","name","handleFormSubmit","postData","headers","Accept","JSON","stringify"],"sources":["C:/Users/Jesse Alvarez/Desktop/technews/tech-news-java-api/client/src/components/ThoughtForm/index.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nconst ThoughtForm = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    thought: \"\",\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const fileInput = useRef(null);\n\n  const handleImageUpload = (event) => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append('image', fileInput.current.files[0]);\n  \n    const postImage = async () => {\n      try {\n        const res = await fetch('/api/image-upload', {\n          mode: 'cors',\n          method: 'POST',\n          body: data,\n        });\n        if (!res.ok) throw new Error(res.statusText);\n        const postResponse = await res.json();\n        setFormState({ ...formState, image: postResponse.Location });\n        console.log('postImage: ', postResponse.Location);\n        return postResponse.Location;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    postImage();\n  };\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setFormState({ ...formState, [event.target.name]: event.target.value });\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const postData = async () => {\n      const res = await fetch('/api/users', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formState),\n      });\n      const data = await res.json();\n      console.log(data);\n    };\n    postData();\n\n    // clear form value\n    setFormState({ username: \"\", thought: \"\" });\n    setCharacterCount(0);\n  };\n\n  return (\n    <div>\n      <p className={`m-0 ${characterCount === 280 ? \"text-error\" : \"\"}`}>\n        Character Count: {characterCount}/280\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <input\n          placeholder=\"Name\"\n          name=\"username\"\n          value={formState.username}\n          className=\"form-input col-12 \"\n          onChange={handleChange}\n        ></input>\n        <textarea\n          placeholder=\"Here's a new thought...\"\n          name=\"thought\"\n          value={formState.thought}\n          className=\"form-input col-12 \"\n          onChange={handleChange}\n        ></textarea>\n        <label className=\"form-input col-12  p-1\">\n          Add an image to your thought:\n          <input type=\"file\" ref=\"{fileInput}\" className=\"form-input p-2\" />\n          <button className=\"btn\" onClick={handleImageUpload} type=\"submit\">\n            Upload\n          </button>\n        </label>\n        <button className=\"btn col-12 \" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;AAEA,MAAMC,WAAW,GAAG,MAAM;EACxB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC;IACzCK,QAAQ,EAAE,EAD+B;IAEzCC,OAAO,EAAE;EAFgC,CAAD,CAA1C;EAIA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,CAAD,CAApD;EAEA,MAAMS,SAAS,GAAGR,MAAM,CAAC,IAAD,CAAxB;;EAEA,MAAMS,iBAAiB,GAAIC,KAAD,IAAW;IACnCA,KAAK,CAACC,cAAN;IACA,MAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;IACAD,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBN,SAAS,CAACO,OAAV,CAAkBC,KAAlB,CAAwB,CAAxB,CAArB;;IAEA,MAAMC,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mBAAD,EAAsB;UAC3CC,IAAI,EAAE,MADqC;UAE3CC,MAAM,EAAE,MAFmC;UAG3CC,IAAI,EAAEV;QAHqC,CAAtB,CAAvB;QAKA,IAAI,CAACM,GAAG,CAACK,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUN,GAAG,CAACO,UAAd,CAAN;QACb,MAAMC,YAAY,GAAG,MAAMR,GAAG,CAACS,IAAJ,EAA3B;QACAxB,YAAY,CAAC,EAAE,GAAGD,SAAL;UAAgB0B,KAAK,EAAEF,YAAY,CAACG;QAApC,CAAD,CAAZ;QACAC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,YAAY,CAACG,QAAxC;QACA,OAAOH,YAAY,CAACG,QAApB;MACD,CAXD,CAWE,OAAOG,KAAP,EAAc;QACdF,OAAO,CAACC,GAAR,CAAYC,KAAZ;MACD;IACF,CAfD;;IAgBAf,SAAS;EACV,CAtBD,CATwB,CAiCxB;;;EACA,MAAMgB,YAAY,GAAIvB,KAAD,IAAW;IAC9B,IAAIA,KAAK,CAACwB,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,IAA6B,GAAjC,EAAsC;MACpCjC,YAAY,CAAC,EAAE,GAAGD,SAAL;QAAgB,CAACQ,KAAK,CAACwB,MAAN,CAAaG,IAAd,GAAqB3B,KAAK,CAACwB,MAAN,CAAaC;MAAlD,CAAD,CAAZ;MACA5B,iBAAiB,CAACG,KAAK,CAACwB,MAAN,CAAaC,KAAb,CAAmBC,MAApB,CAAjB;IACD;EACF,CALD,CAlCwB,CAyCxB;;;EACA,MAAME,gBAAgB,GAAI5B,KAAD,IAAW;IAClCA,KAAK,CAACC,cAAN;;IAEA,MAAM4B,QAAQ,GAAG,YAAY;MAC3B,MAAMrB,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAe;QACpCE,MAAM,EAAE,MAD4B;QAEpCmB,OAAO,EAAE;UACPC,MAAM,EAAE,kBADD;UAEP,gBAAgB;QAFT,CAF2B;QAMpCnB,IAAI,EAAEoB,IAAI,CAACC,SAAL,CAAezC,SAAf;MAN8B,CAAf,CAAvB;MAQA,MAAMU,IAAI,GAAG,MAAMM,GAAG,CAACS,IAAJ,EAAnB;MACAG,OAAO,CAACC,GAAR,CAAYnB,IAAZ;IACD,CAXD;;IAYA2B,QAAQ,GAf0B,CAiBlC;;IACApC,YAAY,CAAC;MAAEC,QAAQ,EAAE,EAAZ;MAAgBC,OAAO,EAAE;IAAzB,CAAD,CAAZ;IACAE,iBAAiB,CAAC,CAAD,CAAjB;EACD,CApBD;;EAsBA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAG,SAAS,EAAG,OAAMD,cAAc,KAAK,GAAnB,GAAyB,YAAzB,GAAwC,EAAG,EAAhE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBACoBA,cADpB,SADF,eAIE;IACE,SAAS,EAAC,gEADZ;IAEE,QAAQ,EAAEgC,gBAFZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAIE;IACE,WAAW,EAAC,MADd;IAEE,IAAI,EAAC,UAFP;IAGE,KAAK,EAAEpC,SAAS,CAACE,QAHnB;IAIE,SAAS,EAAC,oBAJZ;IAKE,QAAQ,EAAE6B,YALZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJF,eAWE;IACE,WAAW,EAAC,yBADd;IAEE,IAAI,EAAC,SAFP;IAGE,KAAK,EAAE/B,SAAS,CAACG,OAHnB;IAIE,SAAS,EAAC,oBAJZ;IAKE,QAAQ,EAAE4B,YALZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAXF,eAkBE;IAAO,SAAS,EAAC,wBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iDAEE;IAAO,IAAI,EAAC,MAAZ;IAAmB,GAAG,EAAC,aAAvB;IAAqC,SAAS,EAAC,gBAA/C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAGE;IAAQ,SAAS,EAAC,KAAlB;IAAwB,OAAO,EAAExB,iBAAjC;IAAoD,IAAI,EAAC,QAAzD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAHF,CAlBF,eAyBE;IAAQ,SAAS,EAAC,aAAlB;IAAgC,IAAI,EAAC,QAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAzBF,CAJF,CADF;AAoCD,CApGD;;AAsGA,eAAeR,WAAf"},"metadata":{},"sourceType":"module"}